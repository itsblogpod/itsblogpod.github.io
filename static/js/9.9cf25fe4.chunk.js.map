{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","workspace/feed/FeedArticle.js","workspace/feed/Feed.js"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardActionArea","children","focusVisibleClassName","ButtonBase","focusVisible","focusHighlight","theme","display","textAlign","width","opacity","palette","action","hoverOpacity","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","useStyles","makeStyles","card","actionArea","flexDirection","justifyContent","paddingLeft","paddingRight","paddingTop","paddingBottom","media","alignSelf","height","texts","marginRight","title","fontFamily","fontWeight","fontSize","lineHeight","description","FeedArticle","author","narrator","image","onClick","style","margin","color","Typography","variant","component","marginLeft","src","alt","alignItems","minHeight","pageTitle","marginTop","progress","seperator","marginBottom","FeedArticles","useSelector","state","feedArticles","list","fetching","dispatch","useDispatch","useEffect","fetchFeedArticles","map","item","firstName","lastName","imageURLs","article","trackPlayArticle","id","selectArticle","CircularProgress"],"mappings":"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","file":"static/js/9.9cf25fe4.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import React from \"react\";\nimport { CardActionArea, Card, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\n\nconst useStyles = makeStyles(() => ({\n    card: {\n        width: \"100%\",\n    },\n    actionArea: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        paddingLeft: 64,\n        paddingRight: 64,\n        paddingTop: 24,\n        paddingBottom: 24,\n    },\n    media: {\n        alignSelf: \"flex-start\",\n        width: 144,\n        height: 144,\n        borderRadius: 4,\n    },\n    texts: {\n        alignSelf: \"flex-start\",\n        display: \"flex\",\n        height: 144,\n        marginRight: 8,\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n    },\n    title: {\n        fontFamily: \"IBM Plex Sans\",\n        fontWeight: 600,\n        fontSize: 16,\n        lineHeight: \"20px\",\n        height: 40,\n        overflow: \"hidden\",\n    },\n    description: {\n        fontFamily: \"IBM Plex Sans\",\n        fontWeight: 400,\n        fontSize: 14,\n        lineHeight: \"20px\",\n        height: 40,\n        overflow: \"hidden\",\n    },\n}));\n\nconst FeedArticle = (props) => {\n    const classes = useStyles();\n    const { author, narrator, title, description, image, onClick } = props;\n\n    return (\n        <Card className={classes.card} elevation={0}>\n            <CardActionArea className={classes.actionArea} onClick={onClick}>\n                <div className={classes.texts}>\n                    <div>\n                        <div className={classes.title}>{title}</div>\n                        <div className={classes.description}>{description}</div>\n                    </div>\n                    <div\n                        style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                        }}>\n                        <DescriptionIcon\n                            style={{\n                                margin: 0,\n                                color: \"#888888\",\n                                fontSize: 16,\n                            }}\n                        />\n                        <Typography\n                            variant=\"h6\"\n                            color=\"textSecondary\"\n                            style={{ fontSize: 12 }}\n                            component=\"h6\">\n                            {author}\n                        </Typography>\n                        <MicIcon\n                            style={{\n                                margin: 0,\n                                marginLeft: 8,\n                                color: \"#888888\",\n                                fontSize: 16,\n                            }}\n                        />\n                        <Typography\n                            variant=\"h6\"\n                            color=\"textSecondary\"\n                            style={{ fontSize: 12 }}\n                            component=\"h6\">\n                            {narrator}\n                        </Typography>\n                    </div>\n                </div>\n                <img className={classes.media} src={image} alt={title} />\n            </CardActionArea>\n        </Card>\n    );\n};\n\nexport default FeedArticle;\n","import React, { useEffect } from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { fetchFeedArticles, selectArticle } from \"../../redux/actions\";\nimport FeedArticle from \"./FeedArticle\";\nimport { trackPlayArticle } from \"../../util/analytics\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        minHeight: \"calc(100vh - 64px)\",\n        backgroundColor: \"white\",\n        width: \"calc(100vw - 16px - 256px - 16px - 16px - 400px - 16px - 16px)\",\n        marginLeft: 256 + 16 + 16,\n        borderRadius: 16,\n        paddingTop: 32,\n        paddingBottom: 32,\n    },\n    pageTitle: {\n        fontSize: 40,\n        marginTop: 32,\n        fontWeight: 600,\n    },\n    progress: {\n        width: 40,\n        height: 40,\n    },\n    seperator: {\n        height: 0.5,\n        width: \"calc(100% - 96px)\",\n        backgroundColor: \"#343A4030\",\n        marginTop: 16,\n        marginBottom: 16,\n    },\n}));\n\nconst FeedArticles = () => {\n    const classes = useStyles();\n    const { list, fetching } = useSelector((state) => state.feedArticles);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchFeedArticles());\n    }, [dispatch]);\n\n    const handleSelect = (article) => () => {\n        trackPlayArticle(article.id, \"feed\");\n        dispatch(selectArticle(article));\n    };\n\n    return (\n        <div>\n            <div className={classes.root}>\n                {!fetching &&\n                    list.map((item) => (\n                        <>\n                            <FeedArticle\n                                key={item.id}\n                                title={item.title}\n                                description={item.description}\n                                author={`${item.author.firstName} ${item.author.lastName}`}\n                                narrator={`${item.narrator.firstName} ${item.narrator.lastName}`}\n                                image={item.imageURLs[0]}\n                                onClick={handleSelect(item)}\n                            />\n                            <div className={classes.seperator} />\n                        </>\n                    ))}\n                {fetching && <CircularProgress className={classes.progress} />}\n            </div>\n        </div>\n    );\n};\n\nexport default FeedArticles;\n"],"sourceRoot":""}