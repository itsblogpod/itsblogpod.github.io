{"version":3,"sources":["hook/useDimension.js","component/Hero.js","App.js","reportWebVitals.js","index.js"],"names":["useDimension","useState","window","innerWidth","width","setWidth","innerHeight","height","setHeight","updateDimensions","useEffect","addEventListener","removeEventListener","Hero","id","animationIn","src","alt","Button","kind","onClick","location","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAkBeA,EAhBM,WAAO,IAAD,EACKC,mBAASC,OAAOC,YADrB,mBAChBC,EADgB,KACTC,EADS,OAEKJ,mBAASC,OAAOI,aAFrB,mBAEhBC,EAFgB,KAERC,EAFQ,KAGjBC,EAAmB,WACrBJ,EAASH,OAAOC,YAChBK,EAAUN,OAAOI,cAQrB,OALAI,qBAAU,WAEN,OADAR,OAAOS,iBAAiB,SAAUF,GAC3B,kBAAMP,OAAOU,oBAAoB,SAAUH,MACnD,IAEI,CAAEL,QAAOG,W,OC2BLM,EApCF,WAAO,IACRT,EAAUJ,IAAVI,MAMR,OACI,sBAAKU,GAAG,YAAR,UACI,qBAAKA,GAAG,OAAR,SACI,eAAC,WAAD,CAAUC,YAAaX,GAAS,IAAK,aAAe,aAApD,UACI,sBAAKU,GAAG,OAAR,UACI,qBAAKA,GAAG,YAAYE,IAA8B,kBAAmBC,IAAI,iBACzE,oBAAIH,GAAG,WAAP,wBAEJ,oBAAIA,GAAG,QAAP,iDAGA,oBAAIA,GAAG,cAAP,0HAIA,qBAAKA,GAAG,UAAR,SACI,cAACI,EAAA,EAAD,CAAQC,KAAK,UAAUC,QApBX,WAC5BlB,OAAOmB,SAAW,8DAmBF,4CAIZ,qBAAKP,GAAG,QAAR,SACI,cAAC,WAAD,CAAUC,YAAY,cAAtB,SACI,qBAAKD,GAAG,aAAaE,IAA8B,wBAA0BC,IAAI,+BCxBtFK,EANH,WACV,OACI,cAAC,EAAD,KCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c6331cf3.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useDimension = () => {\n    const [width, setWidth]   = useState(window.innerWidth);\n    const [height, setHeight] = useState(window.innerHeight);\n    const updateDimensions = () => {\n        setWidth(window.innerWidth);\n        setHeight(window.innerHeight);\n    };\n\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateDimensions);\n        return () => window.removeEventListener(\"resize\", updateDimensions);\n    }, []);\n\n    return { width, height };\n};\n\nexport default useDimension;","import React from \"react\";\nimport { Button } from \"carbon-components-react\";\nimport {Animated} from \"react-animated-css\";\n\nimport useDimension from \"../hook/useDimension\";\n\nconst Hero = () => {\n    const { width } = useDimension();\n\n    const handleDownloadPlaystore = () => {\n        window.location = \"https://play.google.com/store/apps/details?id=com.blogcast\";\n    };\n\n    return (\n        <div id=\"container\">\n            <div id=\"left\">\n                <Animated animationIn={width <= 768? \"fadeInDown\" : \"fadeInLeft\"}>\n                    <div id=\"logo\">\n                        <img id=\"logoImage\" src={process.env.PUBLIC_URL + '/image/logo.png'} alt=\"Blogpod logo\" />\n                        <h2 id=\"logoText\">blogpod</h2>\n                    </div>\n                    <h1 id=\"title\">\n                        Listen to insightful audio articles\n                    </h1>\n                    <h5 id=\"description\">\n                        Get the best of true crime, technology, news, lifestyle, and much more in one place.\n                        Download the app today!\n                    </h5>\n                    <div id=\"buttons\">\n                        <Button kind=\"primary\" onClick={handleDownloadPlaystore}>Download from Playstore</Button>\n                    </div>\n                </Animated>\n            </div>\n            <div id=\"right\">\n                <Animated animationIn=\"fadeInRight\">\n                    <img id=\"screenshot\" src={process.env.PUBLIC_URL + \"/image/screenshot.png\" } alt=\"Blogpod screenshot\" />\n                </Animated>\n            </div>\n        </div>\n    );\n};\n\nexport default Hero;","import './app.scss';\nimport './app.scss';\n// import Header from \"./component/Header\";\nimport Hero from \"./component/Hero\";\n\nconst App = () => {\n  return (\n      <Hero />\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}