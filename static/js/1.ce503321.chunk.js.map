{"version":3,"sources":["workspace/article/Image.js","workspace/article/AddImage.js","workspace/common/FormsyTextField.js","workspace/article/AddImageDialog.js","common/constants.js","workspace/article/EditArticle.js"],"names":["useStyles","makeStyles","root","position","image","width","height","marginRight","close","right","top","backgroundColor","borderRadius","display","closeIcon","color","fontSize","Image","props","imageURL","onDelete","classes","className","src","onClick","theme","borderStyle","borderColor","palette","secondary","main","borderWidth","flexDirection","justifyContent","alignItems","marginLeft","add","AddImage","ButtonBase","withFormsy","errorMessage","value","TextField","onChange","event","setValue","currentTarget","error","Boolean","helperText","marginTop","marginBottom","AddImageDialog","open","onCancel","onResult","useState","setImageURL","validURL","setValidURL","Dialog","DialogTitle","DialogContent","DialogContentText","onValid","onInvalid","name","label","validations","isUrl","validationErrors","variant","size","target","required","DialogActions","Button","disabled","languageCodes","locale","title","container","padding","minHeight","left","imagesContainer","flexWrap","description","transcript","descriptionInput","lineHeight","transcriptInput","flex","narrator","primaryImageURL","genderGroup","genderGroupControls","languageCode","audioPlayer","outline","publish","save","attachAudio","progress","chips","chip","margin","tags","narratorOption","paddingTop","paddingBottom","narratorImage","narratorTexts","narratorName","narratorUserName","articleTagImage","loadingArticleTags","arraysEqual","a","b","length","i","EditArticle","params","useParams","useSelector","state","article","current","uploadSignedURL","saving","publishing","generating","uploading","articleTags","list","articleTagById","map","fetchingArticleTags","fetching","dispatch","useDispatch","audioRef","useRef","history","useHistory","setDescription","setTranscript","setTitle","setNarrator","imageURLs","setImageURLs","setLanguageCode","loadingFile","setLoadingFile","audioData","setAudioData","validAudio","setValidAudio","openAddImageDialog","setOpenAddImageDialog","selectedTags","setSelectedTags","narratorOptions","setNarratorOptions","narratorOptionsOpen","setNarratorOptionsOpen","search","setSearch","validSave","setValidSave","fileInputRef","savingRef","publishingRef","generatingRef","uploadingRef","narratorFilterOptions","createFilterOptions","matchFrom","ignoreAccents","ignoreCase","stringify","option","userName","firstName","lastName","loadingNarratorOptions","useEffect","active","records","getUsers","users","console","log","persistedArticle","id","changesMade","replace","showNotification","fetchArticle","uploadToSignedURL","load","handleOpenAddImageDialog","handleDeleteImage","index","newImageURLs","filter","_value","currentIndex","handleFileReset","handleFileUpload","window","File","FileReader","FileList","Blob","alert","file","files","arrayBuffer","result","confirm","getUploadSignedURL","slug","handleNarratorChange","newNarrator","handleNarratorOptionsOpen","handleNarratorOptionsClose","handleLanguageCodeChange","handleAudioError","handleSave","articleData","actionCreator","createArticle","updateArticle","handlePublish","published","unpublishArticle","publishArticle","handleTagsChange","tagsMenuProps","PaperProps","style","maxHeight","minLength","maxLength","multiline","rows","InputProps","input","Autocomplete","filterOptions","onOpen","onClose","renderOptionLabel","Fragment","renderOption","pictureURL","options","loading","renderInput","params0","endAdornment","CircularProgress","getOptionSelected","getOptionLabel","FormControl","InputLabel","paddingLeft","paddingRight","Select","labelId","multiple","renderValue","tagId","articleTag","Chip","avatar","Avatar","MenuProps","tag","MenuItem","Typography","languageCode0","type","controls","ref","onError","audioURL","processing","accept","hidden","click","renderAttachButton"],"mappings":"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","file":"static/js/1.ce503321.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CloseIcon from \"@material-ui/icons/Cancel\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        position: \"relative\",\n    },\n    image: {\n        width: 100,\n        height: 100,\n        marginRight: 40,\n    },\n    close: {\n        position: \"absolute\",\n        right: 40,\n        top: -8,\n        backgroundColor: \"white\",\n        width: 8,\n        height: 8,\n        borderRadius: 8,\n        display: \"block\",\n    },\n    closeIcon: {\n        color: \"\",\n        fontSize: 16,\n    },\n}));\n\nconst Image = (props) => {\n    const { imageURL, onDelete } = props;\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            {/* eslint-disable-next-line jsx-a11y/alt-text */}\n            <img className={classes.image} src={imageURL} />\n            <span className={classes.close} onClick={onDelete}>\n                <CloseIcon className={classes.closeIcon} />\n            </span>\n        </div>\n    );\n};\n\nexport default Image;\n","import React from \"react\";\nimport { ButtonBase } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/AddPhotoAlternate\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    borderStyle: \"dashed\",\n    borderColor: theme.palette.secondary.main,\n    borderWidth: 2,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: 100,\n    width: 100,\n    marginLeft: 0,\n  },\n  add: {\n    fontSize: 24,\n    color: theme.palette.secondary.main,\n  },\n}));\n\nconst AddImage = (props) => {\n  const classes = useStyles();\n  const { onClick } = props;\n\n  return (\n    <ButtonBase className={classes.root} onClick={onClick}>\n      <AddIcon className={classes.add} />\n    </ButtonBase>\n  );\n};\n\nexport default AddImage;\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { withFormsy } from \"formsy-react\";\n\nfunction FormsyTextField(props) {\n    const { errorMessage } = props;\n    const value = props.value || \"\";\n\n    const changeValue = (event) => {\n        props.setValue(event.currentTarget.value);\n        if (props.onChange) {\n            props.onChange(event);\n        }\n    };\n\n    return (\n        <TextField\n            {...props}\n            onChange={changeValue}\n            value={value}\n            error={Boolean(errorMessage)}\n            helperText={errorMessage}\n        />\n    );\n}\n\nexport default withFormsy(FormsyTextField);\n","import React, { useState } from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Formsy from \"formsy-react\";\n\nimport TextField from \"../common/FormsyTextField\";\n\nconst useStyles = makeStyles(() => ({\n    imageURL: {\n        width: \"100%\",\n        marginTop: 16,\n        marginBottom: 16,\n    },\n}));\n\nconst AddImageDialog = (props) => {\n    const { open, onCancel, onResult } = props;\n    const [imageURL, setImageURL] = useState(\"\");\n    const [validURL, setValidURL] = useState(false);\n    const classes = useStyles();\n\n    const handleImageURLChange = (event) => {\n        setImageURL(event.target.value);\n    };\n\n    const handleResult = () => {\n        onResult(imageURL);\n    };\n\n    return (\n        <Dialog open={open}>\n            <DialogTitle>Add Image</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Please specify an image with 1:1 aspect ratio, that is, an\n                    image with equal width and height. This is a convenient\n                    format for mobile screens.\n                </DialogContentText>\n                <Formsy\n                    onValid={() => setValidURL(true)}\n                    onInvalid={() => setValidURL(false)}>\n                    <TextField\n                        name=\"imageUrl\"\n                        className={classes.imageURL}\n                        label=\"Image URL\"\n                        validations={{\n                            isUrl: true,\n                        }}\n                        validationErrors={{\n                            isUrl: \"Please enter a valid image URL.\",\n                        }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        value={imageURL}\n                        onChange={handleImageURLChange}\n                        required={true}\n                    />\n                </Formsy>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onCancel} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button\n                    onClick={handleResult}\n                    color=\"primary\"\n                    disabled={!validURL}>\n                    Add\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default AddImageDialog;\n","/* eslint-disable-next-line import/prefer-default-export */\nexport const languageCodes = [\n    { locale: \"en\", title: \"English\" },\n    { locale: \"hi\", title: \"Hindi\" },\n    { locale: \"bn\", title: \"Bengali\" },\n    { locale: \"mr\", title: \"Marathi\" },\n    { locale: \"te\", title: \"Telugu\" },\n    { locale: \"ta\", title: \"Tamil\" },\n    { locale: \"gu\", title: \"Gujarati\" },\n    { locale: \"kn\", title: \"Kannada\" },\n    { locale: \"ml\", title: \"Malayalam\" },\n];\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n    Button,\n    FormControl,\n    MenuItem,\n    InputLabel,\n    Select,\n    CircularProgress,\n    Chip,\n    Typography,\n    Avatar,\n} from \"@material-ui/core\";\nimport { Autocomplete, createFilterOptions } from \"@material-ui/lab\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Formsy from \"formsy-react\";\n\nimport {\n    fetchArticle,\n    createArticle,\n    updateArticle,\n    uploadToSignedURL,\n    getUploadSignedURL,\n    showNotification,\n    publishArticle,\n    unpublishArticle,\n} from \"../../redux/actions\";\nimport Image from \"./Image\";\nimport AddImage from \"./AddImage\";\nimport AddImageDialog from \"./AddImageDialog\";\nimport { languageCodes } from \"../../common/constants\";\nimport { getUsers } from \"../../server/api\";\nimport TextField from \"../common/FormsyTextField\";\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        padding: 32,\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        minHeight: \"calc(100vh - 64px)\",\n        width: \"calc(100vw - 16px - 256px - 16px - 16px)\",\n        marginLeft: 256 + 16 + 16,\n        backgroundColor: \"white\",\n        borderRadius: 16,\n    },\n    left: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"70%\",\n    },\n    imagesContainer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n    },\n    image: {},\n    description: {\n        width: \"100%\",\n        marginTop: 40,\n    },\n    transcript: {\n        width: \"100%\",\n        marginTop: 24,\n    },\n    descriptionInput: {\n        lineHeight: 1.8,\n        fontSize: 15,\n    },\n    transcriptInput: {\n        lineHeight: 1.8,\n        fontSize: 15,\n    },\n    right: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginLeft: 24,\n        flex: 1,\n    },\n    title: {\n        width: \"100%\",\n    },\n    narrator: {\n        width: \"100%\",\n        marginTop: 24,\n    },\n    primaryImageURL: {\n        width: \"100%\",\n        marginTop: 24,\n    },\n    genderGroup: {\n        marginTop: 16,\n    },\n    genderGroupControls: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    languageCode: {\n        marginTop: 24,\n        width: \"100%\",\n    },\n    audioPlayer: {\n        outline: \"none\",\n        marginTop: 40,\n        width: \"100%\",\n    },\n    publish: {\n        width: \"100%\",\n        marginTop: 40,\n    },\n    save: {\n        width: \"100%\",\n        marginTop: 24,\n    },\n    attachAudio: {\n        width: \"100%\",\n        marginTop: 24,\n    },\n    progress: {\n        marginRight: 8,\n    },\n    chips: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n        fontSize: 11,\n    },\n    tags: {\n        marginTop: 24,\n        width: \"100%\",\n    },\n    narratorOption: {\n        flexDirection: \"row\",\n        display: \"flex\",\n        paddingTop: 4,\n        paddingBottom: 4,\n    },\n    narratorImage: {\n        width: 40,\n        height: 40,\n        borderRadius: 20,\n    },\n    narratorTexts: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginLeft: 16,\n    },\n    narratorName: {\n        fontSize: 14,\n        color: \"#424242\",\n    },\n    narratorUserName: {\n        fontSize: 12,\n        color: \"#9e9e9e\",\n    },\n    articleTagImage: {\n        width: 28,\n        height: 28,\n        borderRadius: \"50%\",\n        marginRight: 12,\n    },\n    loadingArticleTags: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: 56,\n    },\n}));\n\nconst arraysEqual = (a, b) => {\n    if (a === b) return true;\n    if (a == null || b == null) return false;\n    if (a.length !== b.length) return false;\n\n    // If you don't care about the order of the elements inside\n    // the array, you should sort both arrays here.\n    // Please note that calling sort on an array will modify that array.\n    // you might want to clone your array first.\n\n    /* eslint-disable-next-line no-plusplus */\n    for (let i = 0; i < a.length; ++i) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\nconst EditArticle = () => {\n    const params = useParams();\n    const {\n        current,\n        uploadSignedURL,\n        saving,\n        publishing,\n        generating,\n        uploading,\n        error,\n    } = useSelector((state) => state.article);\n    const {\n        list: articleTags,\n        map: articleTagById,\n        fetching: fetchingArticleTags,\n    } = useSelector((state) => state.articleTags);\n    const dispatch = useDispatch();\n    const audioRef = useRef();\n    const classes = useStyles();\n    const history = useHistory();\n    const [description, setDescription] = useState(\"\");\n    const [transcript, setTranscript] = useState(\"\");\n    const [title, setTitle] = useState(\"\");\n    const [narrator, setNarrator] = useState(null);\n    const [imageURLs, setImageURLs] = useState([]);\n    const [languageCode, setLanguageCode] = useState(\"en\");\n    const [loadingFile, setLoadingFile] = useState(false);\n    const [audioData, setAudioData] = useState(null);\n    const [validAudio, setValidAudio] = useState(true);\n    const [openAddImageDialog, setOpenAddImageDialog] = useState(false);\n    const [selectedTags, setSelectedTags] = useState([]);\n    const [narratorOptions, setNarratorOptions] = useState([]);\n    const [narratorOptionsOpen, setNarratorOptionsOpen] = useState(false);\n    // const [emptyNarratorResults, setEmptyNarratorResults] = useState(false);\n    const [search, setSearch] = useState(\"\");\n    const [validSave, setValidSave] = useState(false);\n    const fileInputRef = useRef();\n    const savingRef = useRef();\n    const publishingRef = useRef();\n    const generatingRef = useRef();\n    const uploadingRef = useRef();\n\n    const narratorFilterOptions = createFilterOptions({\n        matchFrom: \"any\",\n        ignoreAccents: true,\n        ignoreCase: true,\n        stringify: (option) =>\n            `${option.userName} ${option.firstName} ${option.lastName}`,\n    });\n\n    const loadingNarratorOptions =\n        narratorOptionsOpen && narratorOptions.length === 0;\n\n    useEffect(() => {\n        if (!loadingNarratorOptions) {\n            return undefined;\n        }\n\n        let active = true;\n\n        (async () => {\n            let records = [];\n            if (search) {\n                const users = await getUsers({\n                    search,\n                });\n                console.log(users);\n                records = users.records;\n            }\n\n            if (active) {\n                // if (records.length === 0) {\n                //   setEmptyNarratorResults(true);\n                // }\n                setNarratorOptions(records);\n            }\n        })();\n\n        return () => {\n            active = false;\n        };\n    }, [loadingNarratorOptions, search]);\n\n    useEffect(() => {\n        if (!narratorOptionsOpen) {\n            setNarratorOptions([]);\n        }\n    }, [narratorOptionsOpen]);\n\n    const persistedArticle = params.id && current?.id === params.id;\n    const changesMade =\n        !params.id ||\n        (current &&\n            (current.transcript !== transcript ||\n                current.description !== description ||\n                current.title !== title ||\n                current.narrator.id !== narrator?.id ||\n                !arraysEqual(current.tags, selectedTags) ||\n                !arraysEqual(current.imageURLs, imageURLs) ||\n                current.languageCode !== languageCode));\n\n    useEffect(() => {\n        /* 1. Were we saving something previously?\n         * 2. Was the save successful?\n         * 3. Sure we have an article?\n         */\n        if (savingRef.current && !saving && !error && current) {\n            history.replace(`/articles/${current.id}/edit`);\n        }\n        savingRef.current = saving;\n    }, [current, error, history, saving]);\n\n    useEffect(() => {\n        if (publishingRef.current && !publishing && error) {\n            dispatch(showNotification(error, \"ERROR\"));\n        }\n        publishingRef.current = publishing;\n    }, [dispatch, error, publishing]);\n\n    useEffect(() => {\n        if (params.id && (!current || current.id !== params.id)) {\n            dispatch(\n                fetchArticle({\n                    id: params.id,\n                }),\n            );\n        }\n    }, [current, dispatch, params.id]);\n\n    useEffect(() => {\n        if (generatingRef.current && !generating && !error && uploadSignedURL) {\n            dispatch(uploadToSignedURL(uploadSignedURL, audioData));\n        }\n\n        if (generatingRef.current && !generating && error) {\n            dispatch(showNotification(error, \"ERROR\"));\n        }\n\n        generatingRef.current = generating;\n    }, [audioData, dispatch, error, generating, uploadSignedURL]);\n\n    useEffect(() => {\n        if (uploadingRef.current && !uploading) {\n            setValidAudio(true);\n            audioRef.current?.load();\n        }\n        uploadingRef.current = uploading;\n    }, [uploading]);\n\n    useEffect(() => {\n        if (persistedArticle) {\n            setTranscript(current.transcript);\n            setDescription(current.description);\n            setTitle(current.title);\n            setNarrator(current.narrator);\n            setSelectedTags(current.tags || []);\n            setImageURLs(current.imageURLs);\n            setLanguageCode(current.languageCode);\n        }\n    }, [current, persistedArticle]);\n\n    useEffect(() => {\n        audioRef.current?.load();\n    }, []);\n\n    console.log(articleTags);\n\n    const handleOpenAddImageDialog = () => {\n        setOpenAddImageDialog(true);\n    };\n\n    const handleCloseAddImageDialog = () => {\n        setOpenAddImageDialog(false);\n    };\n\n    const handleNewImage = (imageURL) => {\n        setImageURLs([...imageURLs, imageURL]);\n        setOpenAddImageDialog(false);\n    };\n\n    const handleDeleteImage = (index) => () => {\n        const newImageURLs = imageURLs.filter(\n            (_value, currentIndex) => currentIndex !== index,\n        );\n        setImageURLs(newImageURLs);\n    };\n\n    const handleFileReset = (event) => {\n        /* Reset the input element. Otherwise the user will not be able to select the same file again.\n         * https://stackoverflow.com/a/40429197\n         */\n        /* eslint-disable-next-line no-param-reassign */\n        event.target.value = null;\n    };\n\n    const handleFileUpload = async (event) => {\n        if (\n            !window.File ||\n            !window.FileReader ||\n            !window.FileList ||\n            !window.Blob\n        ) {\n            alert(\"The File APIs are not fully supported in this browser.\");\n            return;\n        }\n\n        setLoadingFile(true);\n        const file = event.target.files[0];\n        const result = await file.arrayBuffer();\n        setLoadingFile(false);\n        setAudioData(result);\n\n        const confirmation = window.confirm(\n            `Do you want to upload ${file.name}?`,\n        );\n        if (confirmation) {\n            dispatch(getUploadSignedURL(current.slug));\n        }\n    };\n\n    const handleTitleChange = (event) => {\n        setTitle(event.target.value);\n    };\n\n    const handleNarratorChange = (event, newNarrator) => {\n        setNarrator(newNarrator);\n    };\n\n    const handleNarratorOptionsOpen = () => {\n        // setEmptyNarratorResults(false);\n        setNarratorOptionsOpen(true);\n    };\n\n    const handleNarratorOptionsClose = () => setNarratorOptionsOpen(false);\n\n    const handleTranscriptChange = (event) => {\n        setTranscript(event.target.value);\n    };\n\n    const handleDescriptionChange = (event) => {\n        setDescription(event.target.value);\n    };\n\n    const handleLanguageCodeChange = (event) => {\n        setLanguageCode(event.target.value);\n    };\n\n    const handleAudioError = () => {\n        setValidAudio(false);\n    };\n\n    const handleSave = () => {\n        const articleData = {\n            title,\n            transcript,\n            description,\n            narrator: narrator.id,\n            tags: selectedTags,\n            imageURLs,\n            languageCode,\n        };\n        let actionCreator = createArticle;\n        if (params.id) {\n            articleData.id = params.id;\n            actionCreator = updateArticle;\n        }\n        dispatch(actionCreator(articleData));\n    };\n\n    const handlePublish = () => {\n        const actionCreator = current.published\n            ? unpublishArticle\n            : publishArticle;\n        dispatch(actionCreator(current.id));\n    };\n\n    const renderLanguageCodeSelect = () => (\n        <FormControl\n            variant=\"outlined\"\n            className={classes.languageCode}\n            size=\"small\"\n            required={true}>\n            <InputLabel id=\"languageCodeLabel\">Language</InputLabel>\n            <Select\n                labelId=\"languageCodeLabel\"\n                value={languageCode}\n                onChange={handleLanguageCodeChange}\n                label=\"Language\">\n                {languageCodes.map((languageCode0) => (\n                    <MenuItem\n                        key={languageCode0.locale}\n                        value={languageCode0.locale}>\n                        {languageCode0.title}\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    );\n\n    const handleTagsChange = (event) => {\n        if (!fetchingArticleTags) {\n            setSelectedTags([...event.target.value]);\n        }\n    };\n\n    const tagsMenuProps = {\n        PaperProps: {\n            style: {\n                maxHeight: 300,\n                width: 240,\n            },\n        },\n    };\n\n    const renderTags = () => (\n        <FormControl className={classes.tags} variant=\"outlined\" size=\"small\">\n            <InputLabel\n                style={{\n                    backgroundColor: \"white\",\n                    paddingLeft: 4,\n                    paddingRight: 4,\n                }}\n                id=\"tags-label\">\n                Tags\n            </InputLabel>\n            <Select\n                labelId=\"tags-label\"\n                multiple={true}\n                value={selectedTags}\n                onChange={handleTagsChange}\n                renderValue={() => (\n                    <div className={classes.chips}>\n                        {selectedTags.map((tagId) => {\n                            const articleTag = articleTagById[tagId];\n                            return (\n                                <Chip\n                                    key={tagId}\n                                    label={articleTag.title}\n                                    className={classes.chip}\n                                    avatar={\n                                        <Avatar src={articleTag.imageURL} />\n                                    }\n                                />\n                            );\n                        })}\n                    </div>\n                )}\n                MenuProps={tagsMenuProps}>\n                {articleTags.length === 0 && (\n                    <div className={classes.loadingArticleTags}>\n                        <CircularProgress size=\"24px\" />\n                    </div>\n                )}\n                {articleTags.length > 0 &&\n                    articleTags.map((tag) => (\n                        <MenuItem key={tag.id} value={tag.id}>\n                            <img\n                                className={classes.articleTagImage}\n                                src={tag.imageURL}\n                            />\n                            <Typography>{tag.title}</Typography>\n                        </MenuItem>\n                    ))}\n            </Select>\n        </FormControl>\n    );\n\n    const renderPlayer = () => {\n        if (!persistedArticle) {\n            return null;\n        }\n        return (\n            <audio\n                controls={true}\n                className={classes.audioPlayer}\n                ref={audioRef}\n                onError={handleAudioError}>\n                <source src={current.audioURL} type=\"audio/wav\" />\n            </audio>\n        );\n    };\n\n    const renderAttachButton = () => {\n        if (!persistedArticle) {\n            return null;\n        }\n\n        const processing = loadingFile || generating || uploading;\n\n        return (\n            <>\n                <input\n                    ref={fileInputRef}\n                    type=\"file\"\n                    accept=\"audio/*\"\n                    multiple={false}\n                    onChange={handleFileUpload}\n                    onClick={handleFileReset}\n                    hidden={true}\n                />\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.attachAudio}\n                    onClick={() => fileInputRef.current?.click()}\n                    disabled={processing}>\n                    {processing && (\n                        <CircularProgress\n                            size={8}\n                            className={classes.progress}\n                        />\n                    )}\n                    {loadingFile && \"Loading file...\"}\n                    {generating && \"Preparing to upload...\"}\n                    {uploading && \"Uploading...\"}\n                    {!processing && \"Attach Audio\"}\n                </Button>\n            </>\n        );\n    };\n\n    const renderSave = () => (\n        <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.save}\n            onClick={handleSave}\n            disabled={!validSave || !narrator || saving}>\n            {saving && (\n                <CircularProgress size={16} className={classes.progress} />\n            )}\n            Save\n        </Button>\n    );\n\n    const renderPublish = () =>\n        persistedArticle &&\n        validAudio &&\n        imageURLs.length > 0 &&\n        !changesMade && (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.publish}\n                onClick={handlePublish}>\n                {current.published ? \"Unpublish\" : \"Publish\"}\n            </Button>\n        );\n\n    const renderImages = () => (\n        <div className={classes.imagesContainer}>\n            {imageURLs.map((imageURL, index) => (\n                <Image\n                    key={imageURL}\n                    imageURL={imageURL}\n                    onDelete={handleDeleteImage(index)}\n                    className={classes.image}\n                />\n            ))}\n            <AddImage onClick={handleOpenAddImageDialog} />\n        </div>\n    );\n\n    const renderNarratorSelect = () => (\n        <Autocomplete\n            size=\"small\"\n            filterOptions={narratorFilterOptions}\n            open={narratorOptionsOpen}\n            onOpen={handleNarratorOptionsOpen}\n            onClose={handleNarratorOptionsClose}\n            renderOptionLabel={(option) => (\n                <React.Fragment>\n                    {`${option.userName} • ${option.firstName} ${option.lastName}`}\n                </React.Fragment>\n            )}\n            renderOption={(option) => (\n                <div className={classes.narratorOption}>\n                    <img\n                        className={classes.narratorImage}\n                        src={option.pictureURL}\n                    />\n                    <div className={classes.narratorTexts}>\n                        <span className={classes.narratorName}>\n                            {option.firstName} {option.lastName}\n                        </span>\n                        <span className={classes.narratorUserName}>\n                            {option.userName}\n                        </span>\n                    </div>\n                </div>\n            )}\n            className={classes.narrator}\n            options={narratorOptions}\n            loading={loadingNarratorOptions}\n            renderInput={(params0) => (\n                <TextField\n                    name=\"narrator\"\n                    {...params0}\n                    label=\"Narrator\"\n                    variant=\"outlined\"\n                    InputProps={{\n                        ...params0.InputProps,\n                        endAdornment: (\n                            <React.Fragment>\n                                {loadingNarratorOptions ? (\n                                    <CircularProgress\n                                        color=\"inherit\"\n                                        size={20}\n                                    />\n                                ) : null}\n                                {params0.InputProps.endAdornment}\n                            </React.Fragment>\n                        ),\n                    }}\n                    onChange={(event) => setSearch(event.target.value)}\n                />\n            )}\n            getOptionSelected={(option, value) => option.id === value.id}\n            getOptionLabel={(option) => option.userName || \"unavailable\"}\n            value={narrator}\n            onChange={handleNarratorChange}\n        />\n    );\n\n    return (\n        <>\n            <Formsy\n                onValid={() => setValidSave(true)}\n                onInvalid={() => setValidSave(false)}>\n                <div className={classes.container}>\n                    <div className={classes.left}>\n                        {renderImages()}\n                        <TextField\n                            name=\"description\"\n                            className={classes.description}\n                            label=\"Description\"\n                            validations={{\n                                minLength: 10,\n                                maxLength: 1000,\n                            }}\n                            validationErrors={{\n                                minLength:\n                                    \"The description should have 10-1000 characters.\",\n                                maxLength:\n                                    \"The description should have 10-1000 characters.\",\n                            }}\n                            multiline={true}\n                            rows={5}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            value={description}\n                            onChange={handleDescriptionChange}\n                            InputProps={{\n                                classes: {\n                                    input: classes.descriptionInput,\n                                },\n                            }}\n                            required={true}\n                        />\n                        <TextField\n                            name=\"transcript\"\n                            className={classes.transcript}\n                            label=\"Transcript\"\n                            validations={{\n                                minLength: 10,\n                                maxLength: 20000,\n                            }}\n                            validationErrors={{\n                                minLength:\n                                    \"The transcript should have 10-20000 characters.\",\n                                maxLength:\n                                    \"The transcript should have 10-20000 characters.\",\n                            }}\n                            multiline={true}\n                            rows={30}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            value={transcript}\n                            onChange={handleTranscriptChange}\n                            InputProps={{\n                                classes: {\n                                    input: classes.transcriptInput,\n                                },\n                            }}\n                            required={true}\n                        />\n                    </div>\n                    <div className={classes.right}>\n                        <TextField\n                            name=\"title\"\n                            className={classes.title}\n                            label=\"Title\"\n                            validations={{\n                                minLength: 10,\n                                maxLength: 200,\n                            }}\n                            validationErrors={{\n                                minLength:\n                                    \"The title should have 10-200 characters.\",\n                                maxLength:\n                                    \"The title should have 10-200 characters.\",\n                            }}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            value={title}\n                            onChange={handleTitleChange}\n                            required={true}\n                        />\n                        {renderNarratorSelect()}\n                        {renderTags()}\n                        {renderLanguageCodeSelect()}\n                        {renderSave()}\n\n                        {renderPlayer()}\n                        {renderAttachButton()}\n\n                        {renderPublish()}\n                    </div>\n                </div>\n            </Formsy>\n            {openAddImageDialog && (\n                <AddImageDialog\n                    open={true}\n                    onCancel={handleCloseAddImageDialog}\n                    onResult={handleNewImage}\n                />\n            )}\n        </>\n    );\n};\n\nexport default EditArticle;\n"],"sourceRoot":""}